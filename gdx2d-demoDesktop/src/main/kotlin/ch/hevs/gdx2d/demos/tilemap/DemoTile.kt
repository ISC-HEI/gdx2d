package ch.hevs.gdx2d.demos.tilemap

import ch.hevs.gdx2d.desktop.PortableApplication
import ch.hevs.gdx2d.lib.GdxGraphics
import com.badlogic.gdx.Gdx
import com.badlogic.gdx.Input
import com.badlogic.gdx.maps.tiled.TiledMap
import com.badlogic.gdx.maps.tiled.TiledMapRenderer
import com.badlogic.gdx.maps.tiled.TmxMapLoader
import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer
import com.badlogic.gdx.math.Vector2

/**
 * How to load .tmx resources generated by the
 * Tiled editor (http://www.mapeditor.org/)
 *
 * @author Pierre-AndrÃ© Mudry (mui)
 * @version 0.2
 */
class DemoTile : PortableApplication() {

    lateinit var tiledMap: TiledMap
    lateinit var tiledMapRenderer: TiledMapRenderer

    var zoom = 1f

    var position = Vector2(0f, 0f)

    override fun onInit() {
        setTitle("Tile maps loader, mui 2015")

        Gdx.app.log("[TileDemo]", "Demonstrates loading a generated map")

        tiledMap = TmxMapLoader().load("maps/desert.tmx")
        tiledMapRenderer = OrthogonalTiledMapRenderer(tiledMap)
    }

    override fun onGraphicRender(g: GdxGraphics) {
        g.clear()
        g.zoom(zoom)
        g.moveCamera(position.x, position.y)

        tiledMapRenderer.setView(g.camera)
        tiledMapRenderer.render()

        g.drawSchoolLogo()
        g.drawFPS()
    }

    override fun onScroll(amount: Int) {
        super.onScroll(amount)
        if (amount > 0)
            zoom += 0.1f
        else
            zoom -= 0.1f
    }

    override fun onPan(x: Float, y: Float, deltaX: Float, deltaY: Float) {
        super.onPan(x, y, deltaX, deltaY)
        position.add(-deltaX, deltaY)
    }

    override fun onKeyDown(keycode: Int) {
        super.onKeyDown(keycode)

        when (keycode) {
            Input.Keys.UP -> position.add(0f, -32f)

            Input.Keys.DOWN -> position.add(0f, 32f)

            Input.Keys.LEFT -> position.add(32f, 0f)

            Input.Keys.RIGHT -> position.add(-32f, 0f)

            else -> {
            }
        }
    }

    companion object {

        @JvmStatic
        fun main(args: Array<String>) {
            DemoTile()
        }
    }
}
