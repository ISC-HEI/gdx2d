package hevs.gdx2d.demos.tilemap;

import hevs.gdx2d.lib.GdxGraphics;
import hevs.gdx2d.lib.PortableApplication;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.maps.tiled.TiledMap;
import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
import com.badlogic.gdx.maps.tiled.TmxMapLoader;
import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;

/**
 * How to load .tmx resources generated by the
 * Tiled editor (http://www.mapeditor.org/)
 *
 * @author Pierre-AndrÃ© Mudry (mui)
 * @version 0.2
 */
public class DemoTile extends PortableApplication {

	int width, height;

	OrthographicCamera cam;
	TiledMap tiledMap;
	TiledMapRenderer tileMapRenderer;

	@Override
	public void onInit() {
		width = Gdx.graphics.getWidth();
		height = Gdx.graphics.getHeight();
		setTitle("Tile maps loader, mui 2015");

		Gdx.app.log("[TileDemo]", "Demonstrates loading a generated map");

		cam = new OrthographicCamera();
		cam.setToOrtho(false, width, height);
		cam.translate(10, 550);
		cam.update();
		tiledMap = new TmxMapLoader().load("data/maps/desert.tmx");
		tileMapRenderer = new OrthogonalTiledMapRenderer(tiledMap);
	}

	@Override
	public void onGraphicRender(GdxGraphics g) {
		g.clear();
		
		if(rotate){
			cam.rotate(angle);
		}
		
		tileMapRenderer.setView(cam);		
		cam.update();
		tileMapRenderer.render();
		g.drawSchoolLogo();
		g.drawFPS();
	}

	@Override
	public void onScroll(int amount) {
		super.onScroll(amount);
		if(amount > 0)
			cam.zoom += 0.1;
		else
			cam.zoom -= 0.1;
	}
	
	@Override
	public void onPan(float x, float y, float deltaX, float deltaY) {
		super.onPan(x, y, deltaX, deltaY);
		cam.translate(-deltaX, deltaY);
	}

	boolean rotate = false;
	float angle = 0.4f;
	
	@Override
	public void onKeyDown(int keycode) {
		super.onKeyDown(keycode);
		
		switch (keycode) {
		case Input.Keys.UP:
			cam.translate(0, -32);
			break;

		case Input.Keys.DOWN:
			cam.translate(0, 32);
			break;

		case Input.Keys.LEFT:
			cam.translate(32, 0);
			break;
			
		case Input.Keys.RIGHT:
			cam.translate(-32, 0);
			break;

		case Input.Keys.R:
			rotate = !rotate;
			break;
			
		default:
			break;
		}
	}

	public static void main(String[] args) {
		new DemoTile();
	}
}
