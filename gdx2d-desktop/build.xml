<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
	ANT Build script for the gdx2d-desktop project.
	
	This project contains the gdx2d library and a lot
	of demos running on PC.
	
	The project is compiled in the "bin" folder and
	runnables jar files are exported to the "dist" folder.
	The runnable jar can be executed to run the DemoSelector and
	play with demos. Sources are included in the Jar.
	The javadoc can also be exported and is available online.
	
	@author Christopher MÃ©trailler (mei@hevs.ch)
	@version 1.2
-->
<project default="demos-jar" name="gdx2d-desktop" basedir=".">

	<description>
		ANT build script for "${ant.project.name}".
	</description>

	<!-- Folders input locations -->
	<property name="src.dir" location="src"/>
	<property name="data.dir" location="data"/>
	<property name="libs.dir" location="libs"/>

	<!-- Folders output locations -->
	<property name="build.dir" location="bin"/>
	<property name="dist.dir"  location="dist"/>
	<property name="doc.dir" location="doc"/>

	<property file="build.properties" />

	<!-- Demo runnable Jar -->
	<property name="demos.main" value="hevs.gdx2d.demos.DemoSelector"/>
	<property name="demos.version" value="${version.major}.${version.minor}.${version.patch}"/>
	<property name="lib.version" value="${demos.version}"/>
	<property name="demos.file" value="${ant.project.name}-demos_${demos.version}"/>

	<!-- Manifest attributes -->
	<property name="impl.vendor" value="http://isi.hevs.ch/"/>
	<property name="impl.title" value="${ant.project.name}"/>
	<property name="impl.version" value="${lib.version}"/>
	<tstamp>
		<format property="today" pattern="yyyy-MM-dd HH:mm:ss" />
	</tstamp>

	<!-- Force Java 6 -->
	<property name="ant.build.javac.source" value="1.6" />
	<property name="ant.build.javac.target" value="1.6" />

	<!-- Demo jar classpath -->
	<path id="project-classpath">
		<fileset dir="${libs.dir}" includes="**/*.jar" />
	</path>

	<!-- Build targets -->
	<echo>ANT build script for "${ant.project.name}", version "${lib.version}".</echo>

	<target name="init" description="Init build folders.">
		<tstamp/>
		<!-- Create output folders -->
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${doc.dir}"/>
	</target>

	<target name="clean" description="Clean all unused folders.">
		<!-- Remove all output folders -->
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
		<delete dir="${doc.dir}"/>
	</target>

	<target name="demos-compile" depends="clean, init" description="Compile the library with all demos." >

		<!-- Resources are copied to the data folder -->
		<copy todir="${build.dir}/data">
			<fileset dir="${data.dir}"/>
		</copy>

		<!-- Library icons for Swing -->
		<copy todir="${build.dir}/lib">
			<fileset dir="${data.dir}/lib"/>
		</copy>

		<copy todir="${build.dir}/font">
			<fileset dir="${data.dir}/font"/>
		</copy>

		<!-- Compile all gdx2d Java source files. -->
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="project-classpath" includeantruntime="false">
			<!-- Exclude javadoc files -->
			<exclude name="**/package-info.java"/>
		</javac>
	</target>

	<!-- The same Jar is used to run the demos and to include in a new project. -->
	<target name="demos-jar" depends="demos-compile" description="Export all demos to a runnable jar.">
		<jar destfile="${dist.dir}/${demos.file}.jar" update="true" basedir="${build.dir}">

			<!-- Remove libraies sources to spare a bit space -->
			<fileset dir="${libs.dir}" excludes="**/*-sources*"/>

			<!-- Include sources for the gdx2d lib and components in the Jar.
			It is easier for the students to have sources directly in it. -->
			<fileset dir="${src.dir}" includes="hevs/gdx2d/lib/**/*.java"/>
			<fileset dir="${src.dir}" includes="hevs/gdx2d/components/**/*.java"/>

			<zipfileset excludes="META-INF/*.SF" src="${libs.dir}/gdx-backend-lwjgl-natives.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${libs.dir}/gdx-backend-lwjgl.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${libs.dir}/gdx-natives.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${libs.dir}/gdx.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${libs.dir}/box2dlights.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${libs.dir}/gdx-freetype-natives.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${libs.dir}/gdx-freetype.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="${libs.dir}/accordion-1.2.0-jar-with-dependencies.jar"/>

			<manifest>
				<!-- Demo selector launcher -->
				<attribute name="Main-Class" value="${demos.main}"/>
				<attribute name="Implementation-Vendor" value="${impl.vendor}"/>
				<attribute name="Implementation-Title" value="${impl.title}"/>
				<attribute name="Implementation-Version" value="${impl.version}"/>
				<attribute name="Built-By" value="mei@hevs.ch"/>
				<attribute name="Built-Date" value="${today}"/>
			</manifest>
		</jar>
	</target>
    
	<!-- Launch the demo selector. -->
	<target name="demos-run" description="Run demos using the compiled Jar file.">	    
		<!-- Run only if the jar is available. -->
		<fail message="Runnable jar ${demos.file}.jar not found. It must be exported first.">
		<condition><not><and>
			<available file="${dist.dir}/${demos.file}.jar" type="file"/>
		</and></not></condition>
		</fail>
		<java jar="${dist.dir}/${demos.file}.jar" fork="true"/>
	</target>
    
	<!-- Generate the gdx2d library javadoc. -->
	<target name="lib-doc" depends="init" description="Generate the library documentation (javadoc).">
		<echo>Generate javadoc version "${lib.version}".</echo>

		<javadoc destdir="${doc.dir}/${lib.version}" author="true" version="true" use="true" 
		charset="UTF-8" docencoding="UTF-8" windowtitle="gdx2d API version ${lib.version}">

			<!-- Include all packages except the demo package. -->
			<fileset dir="${src.dir}" defaultexcludes="yes">
				<include name="hevs/gdx2d/lib/**"/>
				<include name="hevs/gdx2d/components/**"/>
				<exclude name="hevs/gdx2d/demos/**"/>
			</fileset>

			<doctitle><![CDATA[
				<h1>gdx2d library API</h1>
				<p>gdx2d is a simple to use 2d game framework. It is multi-platform (working on Windows, Linux and Android). It is Java based with the heavy-lifting done in native code (i.e. C/C++), for example for physics rendering.</p>
				<p>Website: <a target="_parent" href="http://pmudry.github.io/gdx2d/">http://pmudry.github.io/gdx2d/</a></p>
				<hr>
				Build date: ${today}<br>
				Version: <b>${lib.version}</b><br>
			]]></doctitle>

			<bottom><![CDATA[
				Copyright &#169; 2014 gdx2d - <a target="_parent" href="http://isi.hevs.ch">http://isi.hevs.ch</a> & 
				<a target="_parent" href="http://inf1.begincoding.net/">http://inf1.begincoding.net/</a>
			]]></bottom>
			<link href="https://github.com/pmudry/gdx2d"/>
		</javadoc>
	</target>
	
	<!-- Default target used by Travis (https://travis-ci.org/hevs-isi/gdx2d) -->
	<target name="test" depends="demos-jar" />
</project>
